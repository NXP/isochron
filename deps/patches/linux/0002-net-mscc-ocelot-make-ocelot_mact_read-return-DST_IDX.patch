From c3d5fcb09fc2750cc8305ca60ce3fc2c482969e6 Mon Sep 17 00:00:00 2001
From: Vladimir Oltean <vladimir.oltean@nxp.com>
Date: Tue, 15 Sep 2020 00:56:27 +0300
Subject: [PATCH 2/7] net: mscc: ocelot: make ocelot_mact_read return DST_IDX

We'll need to export this function to Felix DSA, who will use it
specifically for the purpose of knowing the destination PGID
corresponding to a MAC table entry.

Unfortunately, the way this function works now is that the PGID is
specified as an input parameter, then the function reads from hardware
the DST_IDX associated with the entry, then compares the input parameter
with what was read from hardware, and gives an error on mismatch.

Stop these guessing games and just let the only caller thus far,
ocelot_fdb_dump(), deal with that.

Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
---
 drivers/net/ethernet/mscc/ocelot.c | 25 +++++++++----------------
 1 file changed, 9 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/mscc/ocelot.c b/drivers/net/ethernet/mscc/ocelot.c
index ca3daebfbc10..31253c43617f 100644
--- a/drivers/net/ethernet/mscc/ocelot.c
+++ b/drivers/net/ethernet/mscc/ocelot.c
@@ -1018,10 +1018,10 @@ static int ocelot_port_fdb_do_dump(const unsigned char *addr, u16 vid,
 	return -EMSGSIZE;
 }
 
-static int ocelot_mact_read(struct ocelot *ocelot, int port, int row, int col,
+static int ocelot_mact_read(struct ocelot *ocelot, int row, int col, int *dst,
 			    struct ocelot_mact_entry *entry)
 {
-	u32 val, dst, macl, mach;
+	u32 val, macl, mach;
 	char mac[ETH_ALEN];
 
 	/* Set row and column to read from */
@@ -1041,12 +1041,8 @@ static int ocelot_mact_read(struct ocelot *ocelot, int port, int row, int col,
 	if (!(val & ANA_TABLES_MACACCESS_VALID))
 		return -EINVAL;
 
-	/* If the entry read has another port configured as its destination,
-	 * do not report it.
-	 */
-	dst = (val & ANA_TABLES_MACACCESS_DEST_IDX_M) >> 3;
-	if (dst != port)
-		return -EINVAL;
+	*dst = (val & ANA_TABLES_MACACCESS_DEST_IDX_M) >> 3;
+	entry->type = ANA_TABLES_MACACCESS_ENTRYTYPE_X(val);
 
 	/* Get the entry's MAC address and VLAN id */
 	macl = ocelot_read(ocelot, ANA_TABLES_MACLDATA);
@@ -1075,16 +1071,13 @@ int ocelot_fdb_dump(struct ocelot *ocelot, int port,
 		for (j = 0; j < 4; j++) {
 			struct ocelot_mact_entry entry;
 			bool is_static;
-			int ret;
+			int dst, ret;
 
-			ret = ocelot_mact_read(ocelot, port, i, j, &entry);
-			/* If the entry is invalid (wrong port, invalid...),
-			 * skip it.
-			 */
-			if (ret == -EINVAL)
-				continue;
-			else if (ret)
+			ret = ocelot_mact_read(ocelot, i, j, &dst, &entry);
+			if (ret)
 				return ret;
+			if (dst != port)
+				continue;
 
 			is_static = (entry.type == ENTRYTYPE_LOCKED);
 
-- 
2.25.1

